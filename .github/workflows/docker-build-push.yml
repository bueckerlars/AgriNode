name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'  # Wird ausgelöst, wenn ein Tag mit 'v' beginnt, z.B. v1.0.0

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  setup-docker:
    name: Set up Docker Buildx
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  login-docker:
    name: Login to Docker Hub
    runs-on: ubuntu-latest
    needs: setup-docker
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

  extract-version:
    name: Extract Version Information
    runs-on: ubuntu-latest
    needs: login-docker
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Extract version from tag
        id: get_version
        run: |
          # Entferne das 'v' vom Tag und extrahiere die Version
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

  build-dashboard:
    name: Build and Push Dashboard
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build and push dashboard
        uses: docker/build-push-action@v5
        with:
          context: ./agriNode-dashboard
          file: ./agriNode-dashboard/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-dashboard:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-dashboard:${{ needs.extract-version.outputs.version }}
          build-args: |
            VITE_API_URL=/api

  build-gateway:
    name: Build and Push Gateway
    runs-on: ubuntu-latest
    needs: extract-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build and push gateway
        uses: docker/build-push-action@v5
        with:
          context: ./agriNode-gateway
          file: ./agriNode-gateway/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-gateway:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-gateway:${{ needs.extract-version.outputs.version }}

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [build-dashboard, build-gateway, extract-version]
    steps:
      - name: Summary
        run: |
          echo "Successfully built and pushed the following images:"
          echo "- ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-dashboard:latest (${{ needs.extract-version.outputs.version }})"
          echo "- ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-gateway:latest (${{ needs.extract-version.outputs.version }})"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [summary, extract-version]
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.extract-version.outputs.version }}
          body: |
            ## AgriNode ${{ needs.extract-version.outputs.version }}

            Release Notes:
            
            Docker Images für diese Version:
            
            ### Dashboard (Frontend)
            - Docker Hub: [${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-dashboard:${{ needs.extract-version.outputs.version }}](https://hub.docker.com/r/${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-dashboard/tags?name=${{ needs.extract-version.outputs.version }})
            - `docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-dashboard:${{ needs.extract-version.outputs.version }}`
            
            ### Gateway (Backend)
            - Docker Hub: [${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-gateway:${{ needs.extract-version.outputs.version }}](https://hub.docker.com/r/${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-gateway/tags?name=${{ needs.extract-version.outputs.version }})
            - `docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/agrinode-gateway:${{ needs.extract-version.outputs.version }}` 
          generate_release_notes: true
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}